// <auto-generated />
using System;
using HowManyAnimalsDoYouWeighAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HowManyAnimalsDoYouWeighAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220625132939_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.FunFacts.AnimalFunFact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("AnimalFunFacts");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.ItemFunFacts.ItemFunFact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemFunFacts");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Items.Substance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Density")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RandomFact")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Substances");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Visualizations.Visualization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Visualizations");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.FunFacts.AnimalFunFact", b =>
                {
                    b.HasOne("HowManyAnimalsDoYouWeighAPI.Animal", null)
                        .WithMany("FunFacts")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.ItemFunFacts.ItemFunFact", b =>
                {
                    b.HasOne("HowManyAnimalsDoYouWeighAPI.Items.Item", null)
                        .WithMany("RandomFacts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Animal", b =>
                {
                    b.Navigation("FunFacts");
                });

            modelBuilder.Entity("HowManyAnimalsDoYouWeighAPI.Items.Item", b =>
                {
                    b.Navigation("RandomFacts");
                });
#pragma warning restore 612, 618
        }
    }
}
